The program’s use of “gets” introduces a significant security flaw in the system. The function “gets” does not check or prevent more then anticipated data from being entered into the stack. In this case the local variable pass, used to grant access, is stored directly above buff[4], that stores the output of  “gets”, on the stack. By entering the appropriate number of characters into the password field to bridge the gap between the buf array and the pass variable followed by the ASCII character corresponding to decimal 59, the value used to verify pass, we were able to overwrite the local variable gaining access to the “secure” system. An example password would be “123456789012;” in a system that allocates 12 bytes between the start of buf and the pass variable.
